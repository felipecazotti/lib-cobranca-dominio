name: Publish NuGet to Azure Artifacts
on:
  push:
    tags:
      - 'v*'  # Gatilho para versões como v1.0.0, v1.2.3, etc.

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout código
      uses: actions/checkout@v3
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'
        
    - name: Extrair versão da tag
      id: get_version
      run: |
        # Remove o prefixo 'v' da tag (v1.0.0 -> 1.0.0)
        VERSION=${GITHUB_REF#refs/tags/v}
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        echo "Versão extraída: $VERSION"
        
    - name: Adicionar feed do Azure Artifacts
      run: |
        dotnet nuget add source \
          --username anything \
          --password ${{ secrets.AZURE_DEVOPS_PAT }} \
          --store-password-in-clear-text \
          --name AzureArtifacts \
          "https://pkgs.dev.azure.com/felipecazotti/gestao_cobrancas/_packaging/NugetPrivado/nuget/v3/index.json"
          
    - name: Restaurar dependências
      run: dotnet restore
      
    - name: Build e empacotar com versão automática
      run: |
        dotnet pack \
          --configuration Release \
          --output ./packages \
          -p:PackageVersion=${{ steps.get_version.outputs.VERSION }} \
          -p:AssemblyVersion=${{ steps.get_version.outputs.VERSION }} \
          -p:FileVersion=${{ steps.get_version.outputs.VERSION }}
        
    - name: Debug - Verificar versão e arquivos gerados
      run: |
        echo "Versão sendo usada: ${{ steps.get_version.outputs.VERSION }}"
        echo "Tag original: ${{ github.ref }}"
        echo "Conteúdo da pasta packages:"
        ls -la ./packages/
        echo "Arquivos .nupkg encontrados:"
        find ./packages -name "*.nupkg" -type f
        
    - name: Publicar pacote no Azure Artifacts
      run: |
        dotnet nuget push "./packages/*.nupkg" \
          --source AzureArtifacts \
          --api-key az \
          --skip-duplicate
